{"version":3,"sources":["webpack://index/webpack/universalModuleDefinition","webpack://index/webpack/bootstrap","webpack://index/../node_modules/eventemitter3/index.js","webpack://index/../node_modules/generate-unique-id/index.js","webpack://index/./core/View.ts","webpack://index/./core/Controller.ts","webpack://index/./core/Model.ts","webpack://index/./patterns/facade/Facade.ts","webpack://index/./patterns/observer/Notifier.ts","webpack://index/./patterns/command/SimpleCommand.ts","webpack://index/./patterns/command/MacroCommand.ts","webpack://index/./patterns/command/AsyncMacroCommand.ts","webpack://index/./patterns/command/Guard.ts","webpack://index/./patterns/command/SyncMacroCommand.ts","webpack://index/./patterns/mediator/Mediator.ts","webpack://index/./patterns/proxy/Proxy.ts","webpack://index/./index.ts"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,OAAO;AAChE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,SAAS;AAClD;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA,eAAe,YAAY;AAC3B;;AAEA;AACA,2DAA2D;AAC3D,+DAA+D;AAC/D,mEAAmE;AACnE,uEAAuE;AACvE;AACA,0DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,SAAS;AACpB,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"index\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"index\"] = factory();\n\telse\n\t\troot[\"index\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\r\n\r\nvar generateUniqueId = {\r\n  defaultOpts: {\r\n    length: 10,\r\n    useLetters: true,\r\n    useNumbers: true,\r\n    includeSymbols: [],\r\n    excludeSymbols: []\r\n  },\r\n  init: function (opts={}) {\r\n    this.config = Object.assign({}, this.defaultOpts, opts);\r\n    let mainArr = [];\r\n    let lettersArr = [];\r\n    let numbersArr = [];\r\n\r\n    if (this.config.useLetters) {\r\n      if (this.config.excludeSymbols.length) this.filterSymbols('letters');\r\n      lettersArr = this.letters.split('');\r\n    }\r\n\r\n    if (this.config.useNumbers) {\r\n      if (this.config.excludeSymbols.length) this.filterSymbols('numbers');\r\n      numbersArr = this.numbers.split('');\r\n    }\r\n\r\n    this.pool = mainArr.concat(lettersArr, numbersArr, this.config.includeSymbols);\r\n\r\n    return this.createID();\r\n  },\r\n  letters: 'abcdefghijklmnopqrstuvwxyz',\r\n  numbers: '0123456789',\r\n  pool: [],\r\n  filterSymbols: function(group) {\r\n    this.config.excludeSymbols.map(item => this[group] = this[group].replace(item, ''));\r\n  },\r\n  getRandomNumber: function() {\r\n    return Math.floor(Math.random()*this.pool.length);\r\n  },\r\n  createID: function() {\r\n    let id = '';\r\n    for (let i=0;i<this.config.length;i++){\r\n      id += this.pool[this.getRandomNumber()];\r\n    }\r\n\r\n    return id;\r\n  }\r\n}\r\n\r\nmodule.exports = generateUniqueId;\r\n","import EventEmitter from 'eventemitter3';\r\nimport Mediator from '../patterns/mediator/Mediator';\r\n\r\nexport default class View {\r\n  public static getInstance(key: string): View {\r\n    if (!key) {\r\n      return null;\r\n    }\r\n\r\n    if (!this.instanceMap[key]) {\r\n      this.instanceMap[key] = new View(key);\r\n    }\r\n\r\n    return this.instanceMap[key];\r\n  }\r\n\r\n  public static removeView(key: string): void {\r\n    delete this.instanceMap[key];\r\n  }\r\n\r\n  private static instanceMap: { [key: string]: View } = {};\r\n\r\n  private multitonKey: string;\r\n  private mediatorMap: IMediatorMap = {};\r\n  private eventEmitter: EventEmitter = new EventEmitter();\r\n\r\n  constructor(key: string) {\r\n    if (View.instanceMap[key]) {\r\n      throw new Error(MULTITON_MSG);\r\n    }\r\n    this.multitonKey = key;\r\n    this.initializeView();\r\n  }\r\n\r\n  public removeObserver(\r\n    notificationName: string,\r\n    observerMethod: (notificationName: string, ...args: any[]) => void,\r\n    context: any,\r\n  ): void {\r\n    this.eventEmitter.removeListener(notificationName, observerMethod, context);\r\n  }\r\n\r\n  public registerObserver(\r\n    notificationName: string,\r\n    observerMethod: (notificationName: string, ...args: any[]) => void,\r\n    context: any,\r\n  ): void {\r\n    this.eventEmitter.on(notificationName, observerMethod, context);\r\n  }\r\n\r\n  public notifyObservers(notificationName: string, ...args: any[]): void {\r\n    this.eventEmitter.emit(notificationName, notificationName, ...args);\r\n  }\r\n\r\n  public registerMediator<V>(mediator: Mediator<V>): void {\r\n    if (\r\n      this.hasMediator(mediator.getMediatorName(), mediator.getMediatorId())\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    mediator.initializeNotifier(this.multitonKey);\r\n    mediator.registerNotificationInterests();\r\n    // register the mediator for retrieval by name\r\n    if (!this.mediatorMap[mediator.getMediatorName()]) {\r\n      this.mediatorMap[mediator.getMediatorName()] = [];\r\n    }\r\n    this.mediatorMap[mediator.getMediatorName()].push({\r\n      mediator,\r\n      interests: [...mediator.listNotificationInterests],\r\n      id: mediator.getMediatorId(),\r\n    });\r\n\r\n    // get notification interests if any\r\n    const interests: string[] = this.mediatorMap[mediator.getMediatorName()][0]\r\n      .interests;\r\n\r\n    // register mediator as an observer for each notification\r\n    if (interests.length > 0) {\r\n      for (const interest of interests) {\r\n        this.registerObserver(\r\n          interest,\r\n          mediator.handleSubscribedNotification,\r\n          mediator,\r\n        );\r\n      }\r\n    }\r\n\r\n    mediator.onRegister();\r\n  }\r\n\r\n  public updateMediator<V>(mediator: Mediator<V>): void {\r\n    if (\r\n      !this.hasMediator(mediator.getMediatorName(), mediator.getMediatorId())\r\n    ) {\r\n      return;\r\n    }\r\n    const mediators: IMediatorMapElement[] = this.mediatorMap[\r\n      mediator.getMediatorName()\r\n    ];\r\n    const targetElement: IMediatorMapElement = mediators.filter(\r\n      (element: IMediatorMapElement) => {\r\n        return element.id === mediator.getMediatorId();\r\n      },\r\n    )[0];\r\n    const registeredInterests: string[] = targetElement.interests;\r\n    const newInterests: string[] = mediator.listNotificationInterests;\r\n    for (const interest of registeredInterests) {\r\n      // interest\r\n      this.removeObserver(\r\n        interest,\r\n        mediator.handleSubscribedNotification,\r\n        mediator,\r\n      );\r\n    }\r\n    for (const interest of newInterests) {\r\n      this.registerObserver(\r\n        interest,\r\n        mediator.handleSubscribedNotification,\r\n        mediator,\r\n      );\r\n    }\r\n    targetElement.interests = [...newInterests];\r\n  }\r\n\r\n  public retrieveMediator<V, T extends Mediator<V>>(\r\n    mediatorName: string,\r\n    id?: number | string,\r\n  ): T {\r\n    const mediators: IMediatorMapElement[] = this.mediatorMap[\r\n      mediatorName\r\n    ] as IMediatorMapElement[];\r\n    if (!!mediators && mediators.length) {\r\n      return id\r\n        ? (mediators.filter(\r\n            (element: IMediatorMapElement) => element.id === id,\r\n          )[0].mediator as T)\r\n        : (mediators[0].mediator as T);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public retrieveMediators<V, T extends Mediator<V>>(\r\n    mediatorName: string,\r\n  ): T[] {\r\n    return this.mediatorMap[mediatorName].map(\r\n      (element: IMediatorMapElement) => element.mediator as T,\r\n    );\r\n  }\r\n\r\n  public removeMediator<V, T extends Mediator<V>>(\r\n    mediatorName: string,\r\n    id: number | string,\r\n  ): T {\r\n    if (!this.mediatorMap[mediatorName]) {\r\n      return null;\r\n    }\r\n    const mediators: IMediatorMapElement[] = this.mediatorMap[mediatorName];\r\n    const targetElement: IMediatorMapElement = id\r\n      ? mediators.filter((element: IMediatorMapElement) => {\r\n          return element.id === id;\r\n        })[0]\r\n      : this.mediatorMap[mediatorName][0];\r\n    if (!targetElement) {\r\n      return null;\r\n    }\r\n    // for every notification the mediator is interested in...\r\n    const interests: string[] = targetElement.interests;\r\n    for (const interest of interests) {\r\n      // interest\r\n      this.removeObserver(\r\n        interest,\r\n        targetElement.mediator.handleSubscribedNotification,\r\n        targetElement.mediator,\r\n      );\r\n    }\r\n    // remove the mediator from the map\r\n    const index: number = this.mediatorMap[mediatorName].indexOf(targetElement);\r\n    if (index !== -1) {\r\n      this.mediatorMap[mediatorName].splice(index, 1);\r\n    }\r\n    if (this.mediatorMap[mediatorName].length === 0) {\r\n      delete this.mediatorMap[mediatorName];\r\n    }\r\n\r\n    // alert the mediator that it has been removed\r\n    targetElement.mediator.onRemove();\r\n    return targetElement.mediator as T;\r\n  }\r\n\r\n  public hasMediator(mediatorName: string, id?: number | string): boolean {\r\n    return this.mediatorMap[mediatorName]\r\n      ? id\r\n        ? this.mediatorMap[mediatorName].filter(\r\n            (el: IMediatorMapElement) => el.id === id,\r\n          ).length > 0\r\n        : this.mediatorMap[mediatorName].length > 0\r\n      : false;\r\n  }\r\n\r\n  protected initializeView(): void {}\r\n\r\n  public getMediatorsCount(mediatorName: string): number {\r\n    return this.mediatorMap[mediatorName]\r\n      ? this.mediatorMap[mediatorName].length\r\n      : 0;\r\n  }\r\n\r\n  public getMediatorIndex<V>(mediator: Mediator<V>): number {\r\n    const mediatorMapElements: IMediatorMapElement[] = this.mediatorMap[\r\n      mediator.getMediatorName()\r\n    ];\r\n    const mapElement: IMediatorMapElement = mediatorMapElements.filter(\r\n      (el: IMediatorMapElement) => el.mediator === mediator,\r\n    )[0];\r\n    return mediatorMapElements.indexOf(mapElement);\r\n  }\r\n}\r\n\r\nconst MULTITON_MSG: string =\r\n  'View instance for this Multiton key already constructed!';\r\n\r\nexport interface IMediatorMapElement {\r\n  mediator: Mediator<any>;\r\n  interests: string[];\r\n  id: number | string;\r\n}\r\n\r\nexport interface IMediatorMap {\r\n  [key: string]: IMediatorMapElement[];\r\n}\r\n","import SimpleCommand from '../patterns/command/SimpleCommand';\nimport View from './View';\n\nexport default class Controller {\n  public static removeController(key: string): void {\n    delete this.instanceMap[key];\n  }\n\n  public static getInstance(key: string): Controller {\n    if (!key) {\n      return null;\n    }\n\n    if (!this.instanceMap[key]) {\n      this.instanceMap[key] = new Controller(key);\n    }\n\n    return this.instanceMap[key];\n  }\n\n  private static instanceMap: { [key: string]: Controller } = {};\n\n  private commandMap: { [key: string]: (new () => SimpleCommand)[] } = {};\n  private multitonKey: string;\n  private view: View;\n\n  constructor(key: string) {\n    if (Controller.instanceMap[key]) {\n      throw new Error(MULTITON_MSG);\n    }\n\n    this.multitonKey = key;\n    this.initializeController();\n  }\n\n  public registerCommand<T extends SimpleCommand>(\n    notificationName: string,\n    commandClassRef: new () => T,\n  ): void {\n    if (!this.commandMap[notificationName]) {\n      this.commandMap[notificationName] = [];\n      this.view.registerObserver(notificationName, this.executeCommand, this);\n    }\n    this.commandMap[notificationName].push(commandClassRef);\n  }\n  public registerCommandOnce<T extends SimpleCommand>(\n    notificationName: string,\n    commandClassRef: new () => T,\n  ): void {\n    if (!this.commandMap[notificationName]) {\n      this.commandMap[notificationName] = [];\n      this.view.registerObserver(notificationName, this.executeCommand, this);\n      this.view.registerObserver(\n        notificationName,\n        this.removeCommand.bind(this, notificationName, commandClassRef),\n        this,\n      );\n    }\n    this.commandMap[notificationName].push(commandClassRef);\n  }\n\n  public hasCommand<T extends SimpleCommand>(\n    notificationName: string,\n    commandClassRef: new () => T,\n  ): boolean {\n    return (\n      this.hasAnyCommand(notificationName) &&\n      this.commandMap[notificationName].indexOf(commandClassRef) !== -1\n    );\n  }\n\n  public hasAnyCommand(notificationName: string): boolean {\n    return (\n      this.commandMap[notificationName] !== undefined &&\n      this.commandMap[notificationName].length !== 0\n    );\n  }\n\n  public removeCommands(notificationName: string): void {\n    if (this.hasAnyCommand(notificationName)) {\n      this.view.removeObserver(notificationName, this.executeCommand, this);\n      delete this.commandMap[notificationName];\n    }\n  }\n  public removeCommand<T extends SimpleCommand>(\n    notificationName: string,\n    commandClassRef: new () => T,\n  ): void {\n    if (this.hasCommand(notificationName, commandClassRef)) {\n      this.commandMap[notificationName].splice(\n        this.commandMap[notificationName].indexOf(commandClassRef),\n        1,\n      );\n    }\n  }\n\n  protected initializeController(): void {\n    this.view = View.getInstance(this.multitonKey);\n  }\n\n  protected executeCommand(notificationName: string, ...args: any[]): void {\n    const commandClassRefs: (new () => SimpleCommand)[] = this.commandMap[\n      notificationName\n    ];\n    if (!commandClassRefs || commandClassRefs.length === 0) {\n      return;\n    }\n    for (const commandClassRef of commandClassRefs) {\n      const commandInstance: SimpleCommand = new commandClassRef();\n      commandInstance.initializeNotifier(this.multitonKey);\n      commandInstance.startCommandExecution(notificationName, ...args);\n    }\n  }\n}\n\nconst MULTITON_MSG: string =\n  'controller key for this Multiton key already constructed';\n","import Proxy from '../patterns/proxy/Proxy';\n\nexport default class Model {\n  public static getInstance(key: string): Model {\n    if (!key) {\n      return null;\n    }\n\n    if (!this.instanceMap[key]) {\n      this.instanceMap[key] = new Model(key);\n    }\n\n    return this.instanceMap[key];\n  }\n\n  public static removeModel(key: string): void {\n    delete this.instanceMap[key];\n  }\n  private static instanceMap: { [key: string]: Model } = {};\n\n  private multitonKey: string;\n  private proxyMap: { [key: string]: Proxy<any> } = {};\n\n  constructor(key: string) {\n    if (Model.instanceMap[key]) {\n      throw new Error(MULTITON_MSG);\n    }\n    this.multitonKey = key;\n    this.initializeModel();\n  }\n\n  public registerProxy<M, T extends Proxy<M>>(proxy: T): void {\n    proxy.initializeNotifier(this.multitonKey);\n    this.proxyMap[proxy.getProxyName()] = proxy;\n    proxy.onRegister();\n  }\n\n  public retrieveProxy<M, T extends Proxy<M>>(proxyName: string): T {\n    return this.proxyMap[proxyName] as T;\n  }\n\n  public hasProxy(proxyName: string): boolean {\n    return this.proxyMap[proxyName] !== undefined;\n  }\n\n  public removeProxy<M, T extends Proxy<M>>(proxyName: string): T {\n    if (this.proxyMap[proxyName]) {\n      const proxy: T = this.proxyMap[proxyName] as T;\n      proxy.onRemove();\n      delete this.proxyMap[proxyName];\n      return proxy;\n    }\n    return null;\n  }\n\n  protected initializeModel(): void {}\n}\n\nconst MULTITON_MSG: string =\n  'Model instance for this Multiton key already constructed!';\n","import Controller from '../../core/Controller';\r\nimport Model from '../../core/Model';\r\nimport View from '../../core/View';\r\nimport SimpleCommand from '../command/SimpleCommand';\r\nimport Mediator from '../mediator/Mediator';\r\nimport Proxy from '../proxy/Proxy';\r\n\r\nexport default class Facade {\r\n  public static getInstance(key: string): Facade {\r\n    if (!key) {\r\n      return null;\r\n    }\r\n\r\n    if (!Facade.instanceMap[key]) {\r\n      Facade.instanceMap[key] = new Facade(key);\r\n    }\r\n\r\n    return Facade.instanceMap[key];\r\n  }\r\n\r\n  public static hasCore(key: string): boolean {\r\n    return this.instanceMap[key] !== undefined;\r\n  }\r\n\r\n  public static removeCore(key: string): void {\r\n    if (!this.instanceMap[key]) {\r\n      return;\r\n    }\r\n    Model.removeModel(key);\r\n    View.removeView(key);\r\n    Controller.removeController(key);\r\n    delete this.instanceMap[key];\r\n  }\r\n  protected static instanceMap: { [key: string]: Facade } = {};\r\n\r\n  private model: Model;\r\n  private view: View;\r\n  private controller: Controller;\r\n  private multitonKey: string;\r\n\r\n  constructor(key: string) {\r\n    if (Facade.instanceMap[key]) {\r\n      throw new Error(MULTITON_MSG);\r\n    }\r\n    this.initializeNotifier(key);\r\n    this.initializeFacade();\r\n  }\r\n\r\n  public initializeFacade(): void {\r\n    this.initializeModel();\r\n    this.initializeController();\r\n    this.initializeView();\r\n  }\r\n\r\n  public registerCommand<T extends SimpleCommand>(\r\n    notificationName: string,\r\n    commandClassRef: new () => T,\r\n  ): void {\r\n    this.controller.registerCommand<T>(notificationName, commandClassRef);\r\n  }\r\n  public registerCommandOnce<T extends SimpleCommand>(\r\n    notificationName: string,\r\n    commandClassRef: new () => T,\r\n  ): void {\r\n    this.controller.registerCommandOnce<T>(notificationName, commandClassRef);\r\n  }\r\n\r\n  public removeCommands(notificationName: string): void {\r\n    this.controller.removeCommands(notificationName);\r\n  }\r\n  public removeCommand<T extends SimpleCommand>(\r\n    notificationName: string,\r\n    commandClassRef: new () => T,\r\n  ): void {\r\n    this.controller.removeCommand(notificationName, commandClassRef);\r\n  }\r\n\r\n  public hasAnyCommand(notificationName: string): boolean {\r\n    return this.controller.hasAnyCommand(notificationName);\r\n  }\r\n  public hasCommand<T extends SimpleCommand>(\r\n    notificationName: string,\r\n    commandClassRef: new () => T,\r\n  ): boolean {\r\n    return this.controller.hasCommand(notificationName, commandClassRef);\r\n  }\r\n\r\n  public registerProxy<M, T extends Proxy<M>>(proxy: T): void {\r\n    this.model.registerProxy<M, T>(proxy);\r\n  }\r\n\r\n  public retrieveProxy<M, T extends Proxy<M>>(proxyName: string): T {\r\n    return this.model.retrieveProxy(proxyName);\r\n  }\r\n\r\n  public removeProxy<M, T extends Proxy<M>>(proxyName: string): T {\r\n    if (this.model) {\r\n      return this.model.removeProxy(proxyName);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public hasProxy(proxyName: string): boolean {\r\n    return this.model.hasProxy(proxyName);\r\n  }\r\n\r\n  public registerMediator<V, T extends Mediator<V>>(mediator: T): void {\r\n    this.view.registerMediator(mediator);\r\n  }\r\n\r\n  public registerMediators<V, T extends Mediator<V>>(mediators: T[]): void {\r\n    for (const mediator of mediators) {\r\n      this.view.registerMediator(mediator);\r\n    }\r\n  }\r\n\r\n  public updateMediator<V, T extends Mediator<V>>(mediator: T): void {\r\n    this.view.updateMediator(mediator);\r\n  }\r\n  public getMediatorIndex<V, T extends Mediator<V>>(mediator: T): number {\r\n    return this.view.getMediatorIndex(mediator);\r\n  }\r\n\r\n  public retrieveMediator<V, T extends Mediator<V>>(\r\n    mediatorName: string,\r\n    id?: number | string,\r\n  ): T {\r\n    return this.view.retrieveMediator(mediatorName, id);\r\n  }\r\n  public retrieveMediators<V, T extends Mediator<V>>(\r\n    mediatorName: string,\r\n  ): T[] {\r\n    return this.view.retrieveMediators(mediatorName);\r\n  }\r\n\r\n  public removeMediator<V, T extends Mediator<V>>(\r\n    mediatorName: string,\r\n    id?: number | string,\r\n  ): T {\r\n    return this.view.removeMediator(mediatorName, id);\r\n  }\r\n\r\n  public removeMediators<V, T extends Mediator<V>>(\r\n    mediatorAndIdPairs: { mediatorName: string; id?: number | string }[],\r\n  ): T[] {\r\n    const removedMediators: T[] = [];\r\n    for (const pair of mediatorAndIdPairs) {\r\n      removedMediators.push(\r\n        this.view.removeMediator(pair.mediatorName, pair.id),\r\n      );\r\n    }\r\n    return removedMediators;\r\n  }\r\n\r\n  public hasMediator(mediatorName: string, id: number | string): boolean {\r\n    return this.view.hasMediator(mediatorName, id);\r\n  }\r\n  public hasMediatorWithName(mediatorName: string): boolean {\r\n    return this.view.hasMediator(mediatorName);\r\n  }\r\n\r\n  public getMediatorsCount(mediatorName: string): number {\r\n    return this.view.getMediatorsCount(mediatorName);\r\n  }\r\n\r\n  public sendNotification(notificationName: string, ...args: any[]): void {\r\n    this.notifyObservers(notificationName, ...args);\r\n  }\r\n\r\n  public notifyObservers(notificationName: string, ...args: any[]): void {\r\n    this.view.notifyObservers(notificationName, ...args);\r\n  }\r\n\r\n  public initializeNotifier(key: string): void {\r\n    this.multitonKey = key;\r\n  }\r\n  protected initializeController(): void {\r\n    if (this.controller) {\r\n      return;\r\n    }\r\n    this.controller = Controller.getInstance(this.multitonKey);\r\n  }\r\n\r\n  protected initializeModel(): void {\r\n    if (this.model) {\r\n      return;\r\n    }\r\n    this.model = Model.getInstance(this.multitonKey);\r\n  }\r\n\r\n  protected initializeView(): void {\r\n    if (this.view) {\r\n      return;\r\n    }\r\n    this.view = View.getInstance(this.multitonKey);\r\n  }\r\n}\r\n\r\nconst MULTITON_MSG: string =\r\n  'Facade instance for this Multiton key already constructed!';\r\n","import Facade from '../facade/Facade';\n\nexport default class Notifier {\n  protected facade: Facade;\n  protected multitonKey: string;\n\n  public initializeNotifier(key: string): void {\n    this.multitonKey = key;\n    this.facade = this.getFacade();\n  }\n\n  protected sendNotification(notificationName: string, ...args: any[]): void {\n    if (this.facade) {\n      this.facade.sendNotification(notificationName, ...args);\n    }\n  }\n\n  private getFacade(): Facade {\n    if (this.multitonKey === null) {\n      throw new Error(MULTITON_MSG);\n    }\n\n    return Facade.getInstance(this.multitonKey);\n  }\n}\n\nconst MULTITON_MSG: string =\n  'multitonKey for this Notifier not yet initialized!';\n","import Notifier from '../observer/Notifier';\r\nimport Guard from './Guard';\r\n\r\nexport default abstract class SimpleCommand extends Notifier {\r\n  public guards: Guard[];\r\n  public isChecked: boolean = false;\r\n  public failedGuardsCount: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.guards = [];\r\n    this.prepare();\r\n    this.failedGuardsCount = this.guards.length;\r\n  }\r\n\r\n  public async startCommandExecution(\r\n    notificationName?: string,\r\n    ...args: any[]\r\n  ): Promise<void> {\r\n    !this.isChecked && (await this.checkGuards(notificationName, ...args));\r\n    this.startExecution(notificationName, ...args);\r\n  }\r\n\r\n  public abstract execute(notificationName?: string, ...args: any[]): void;\r\n\r\n  protected onAnyGuardApproved(\r\n    notificationName?: string,\r\n    ...args: any[]\r\n  ): void {\r\n    notificationName;\r\n    args;\r\n  }\r\n  protected onAnyGuardDenied(notificationName?: string, ...args: any[]): void {\r\n    notificationName;\r\n    args;\r\n  }\r\n  protected onAllGuardsDenied(notificationName?: string, ...args: any[]): void {\r\n    notificationName;\r\n    args;\r\n  }\r\n\r\n  protected prepare(): void {\r\n    //\r\n  }\r\n\r\n  protected addGuards<G extends Guard>(\r\n    ...guardClassRefs: (new () => G)[]\r\n  ): void {\r\n    for (const guardClassRef of guardClassRefs) {\r\n      this.guards.push(new guardClassRef());\r\n    }\r\n  }\r\n\r\n  protected sendNotification(notificationName: string, ...args: any[]): void {\r\n    this.facade.sendNotification(notificationName, ...args);\r\n  }\r\n\r\n  protected startExecution(notificationName: string, ...args: any[]): void {\r\n    this.failedGuardsCount === 0\r\n      ? this.execute(notificationName, ...args)\r\n      : this.onAnyGuardDenied(notificationName, ...args);\r\n    this.failedGuardsCount === this.guards.length\r\n      ? this.onAllGuardsDenied(notificationName, ...args)\r\n      : this.onAnyGuardApproved(notificationName, ...args);\r\n  }\r\n\r\n  protected async checkGuards(\r\n    notificationName: string,\r\n    ...args: any[]\r\n  ): Promise<void> {\r\n    for (const guard of this.guards) {\r\n      guard.initializeNotifier(this.multitonKey);\r\n      if (await guard.approve(notificationName, ...args)) {\r\n        this.failedGuardsCount--;\r\n      }\r\n    }\r\n    this.isChecked = true;\r\n  }\r\n}\r\n","import Guard from './Guard';\r\nimport SimpleCommand from './SimpleCommand';\r\n\r\nexport default abstract class MacroCommand<\r\n  T extends SimpleCommand\r\n> extends SimpleCommand {\r\n  protected subCommands: Array<new () => T>;\r\n  protected exclusiveSubCommands: Array<IExclusiveSubCommand<T>>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.subCommands = [];\r\n    this.exclusiveSubCommands = [];\r\n    this.initializeMacroCommand();\r\n  }\r\n\r\n  protected initializeMacroCommand(): void {}\r\n\r\n  protected addSubCommand(subCommand: new () => T): void {\r\n    this.subCommands.push(subCommand);\r\n  }\r\n\r\n  protected addExclusiveSubCommand(\r\n    subCommand: new () => T,\r\n    ...guards: Array<new () => Guard>\r\n  ): void {\r\n    const guardsInstances: Guard[] = [];\r\n    for (const guard of guards) {\r\n      guardsInstances.push(new guard());\r\n    }\r\n    this.exclusiveSubCommands.push({\r\n      command: subCommand,\r\n      guards: guardsInstances,\r\n    });\r\n  }\r\n\r\n  protected async executeExclusiveSubCommands(\r\n    notificationName: string,\r\n    ...args: any[]\r\n  ): Promise<void> {\r\n    for (const exclusiveSubCommand of this.exclusiveSubCommands) {\r\n      const cmd: T = new exclusiveSubCommand.command();\r\n      const guards: Guard[] = [...cmd.guards, ...exclusiveSubCommand.guards];\r\n      let failedGuardsCount: number = 0;\r\n      for (const guard of guards) {\r\n        guard.initializeNotifier(this.multitonKey);\r\n        if (!(await guard.approve(notificationName, ...args))) {\r\n          failedGuardsCount++;\r\n        }\r\n      }\r\n      cmd.isChecked = true;\r\n      if (failedGuardsCount === 0) {\r\n        cmd.initializeNotifier(this.multitonKey);\r\n        await cmd.startCommandExecution(notificationName, ...args);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface IExclusiveSubCommand<T extends SimpleCommand> {\r\n  command: new () => T;\r\n  guards: Guard[];\r\n}\r\n","import MacroCommand from './MacroCommand';\r\nimport SimpleCommand from './SimpleCommand';\r\n\r\nexport default class AsyncMacroCommand<\r\n  T extends SimpleCommand\r\n> extends MacroCommand<T> {\r\n  public async execute(\r\n    notificationName?: string,\r\n    ...args: any[]\r\n  ): Promise<void> {\r\n    this.subCommands.length > 0 &&\r\n      (await this.executeSubCommands(notificationName, ...args));\r\n    this.exclusiveSubCommands.length > 0 &&\r\n      (await this.executeExclusiveSubCommands(notificationName, ...args));\r\n  }\r\n\r\n  protected async executeSubCommands(\r\n    notificationName: string,\r\n    ...args: any[]\r\n  ): Promise<void> {\r\n    while (this.subCommands.length > 0) {\r\n      const ref: new () => T = this.subCommands.shift();\r\n      const cmd: T = new ref();\r\n      cmd.initializeNotifier(this.multitonKey);\r\n      await cmd.startCommandExecution(notificationName, ...args);\r\n    }\r\n  }\r\n}\r\n","import Notifier from '../observer/Notifier';\r\n\r\nexport default abstract class Guard extends Notifier {\r\n  public abstract approve(\r\n    notificationName?: string,\r\n    ...args: any[]\r\n  ): boolean | Promise<boolean>;\r\n}\r\n","import MacroCommand from './MacroCommand';\r\nimport SimpleCommand from './SimpleCommand';\r\n\r\nexport default class SyncMacroCommand<\r\n  T extends SimpleCommand\r\n> extends MacroCommand<T> {\r\n  public execute(notificationName?: string, ...args: any[]): void {\r\n    this.subCommands.length > 0 &&\r\n      this.executeSubCommands(notificationName, ...args);\r\n    this.exclusiveSubCommands.length > 0 &&\r\n      this.executeExclusiveSubCommands(notificationName, ...args);\r\n  }\r\n\r\n  protected executeSubCommands(notificationName: string, ...args: any[]): void {\r\n    while (this.subCommands.length > 0) {\r\n      const ref: new () => T = this.subCommands.shift();\r\n      const cmd: T = new ref();\r\n      cmd.initializeNotifier(this.multitonKey);\r\n      cmd.startCommandExecution(notificationName, ...args);\r\n    }\r\n  }\r\n}\r\n","//@ts-ignore\nconst uuid = require('generate-unique-id');\nimport Notifier from '../observer/Notifier';\n\nexport default abstract class Mediator<V> extends Notifier {\n  protected viewComponent: V;\n  protected id: number | string;\n  protected mediatorName: string;\n  protected notificationInterests: string[] = [];\n  protected isAwake: boolean = true;\n\n  constructor(mediatorName: string, viewComponent: V) {\n    super();\n    this.mediatorName = mediatorName || NAME;\n    this.viewComponent = viewComponent;\n    this.id = uuid.init({\n      length: 6,\n      useLetters: false,\n    });\n  }\n\n  public sleep(): void {\n    this.isAwake = false;\n  }\n\n  public wake(): void {\n    this.isAwake = true;\n  }\n\n  public getMediatorName(): string {\n    return this.mediatorName;\n  }\n\n  public getMediatorId(): number | string {\n    return this.id;\n  }\n\n  public setViewComponent(viewComponent: V): void {\n    this.viewComponent = viewComponent;\n  }\n\n  public getViewComponent(): V {\n    return this.viewComponent;\n  }\n\n  public subscribeToNotifications(...notificationNames: string[]): void {\n    for (const notificationName of notificationNames) {\n      if (this.notificationInterests.indexOf(notificationName) !== -1) {\n        console.warn(\n          `${\n            (this.constructor as any).name\n          } subscribes to same notification: ${notificationName}`,\n        );\n        continue;\n      }\n      this.notificationInterests.push(notificationName);\n    }\n    this.updateMediator();\n  }\n\n  public subscribeToNotification(notificationName: string): void {\n    if (this.notificationInterests.indexOf(notificationName) !== -1) {\n      console.warn(\n        `${\n          (this.constructor as any).name\n        } subscribes to same notification: ${notificationName}`,\n      );\n      return;\n    }\n    this.notificationInterests.push(notificationName);\n    this.updateMediator();\n  }\n\n  public unsubscribeToNotification(...notificationNames: string[]): void {\n    for (const notificationName of notificationNames) {\n      const notificationIndex: number = this.notificationInterests.indexOf(\n        notificationName,\n      );\n      if (notificationIndex === -1) {\n        return;\n      }\n      this.notificationInterests.splice(notificationIndex, 1);\n    }\n    this.updateMediator();\n  }\n\n  public handleSubscribedNotification(\n    notificationName: string,\n    ...args: any[]\n  ): void {\n    this.isAwake && this.handleNotification(notificationName, ...args);\n  }\n\n  public abstract registerNotificationInterests(): void;\n\n  protected abstract handleNotification(\n    notificationName: string,\n    ...args: any[]\n  ): void;\n\n  public onRegister(): void {}\n\n  public onRemove(): void {}\n\n  public setMediatorId(id: number | string): void {\n    this.id = id;\n  }\n\n  get listNotificationInterests(): string[] {\n    return this.notificationInterests;\n  }\n\n  protected updateMediator(): void {\n    this.facade.updateMediator(this);\n  }\n\n  get index(): number {\n    return this.facade.getMediatorIndex(this);\n  }\n}\n\nconst NAME: string = 'Mediator';\n","import Notifier from '../observer/Notifier';\r\n\r\nexport default class Proxy<M> extends Notifier {\r\n  protected proxyName: string;\r\n  private data: M;\r\n\r\n  constructor(proxyName: string, data: M) {\r\n    super();\r\n    this.proxyName = proxyName || NAME;\r\n    this.data = data;\r\n  }\r\n\r\n  public getProxyName(): string {\r\n    return this.proxyName;\r\n  }\r\n\r\n  public onRegister(): void {}\r\n\r\n  public onRemove(): void {}\r\n\r\n  get vo(): M {\r\n    return this.data;\r\n  }\r\n  set vo(data: M) {\r\n    this.data = data;\r\n  }\r\n}\r\n\r\nconst NAME: string = 'Proxy';\r\n","export {\n  default as Controller,\n} from './core/Controller';\nexport { default as Model } from './core/Model';\nexport { default as View } from './core/View';\nexport {\n  default as AsyncMacroCommand,\n} from './patterns/command/AsyncMacroCommand';\nexport {\n  default as Guard,\n} from './patterns/command/Guard';\nexport {\n  default as SimpleCommand,\n} from './patterns/command/SimpleCommand';\nexport {\n  default as SyncMacroCommand,\n} from './patterns/command/SyncMacroCommand';\nexport {\n  default as Facade,\n} from './patterns/facade/Facade';\nexport {\n  default as Mediator,\n} from './patterns/mediator/Mediator';\nexport {\n  default as Notifier,\n} from './patterns/observer/Notifier';\nexport {\n  default as Proxy,\n} from './patterns/proxy/Proxy';\n"],"sourceRoot":""}